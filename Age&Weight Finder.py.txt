import tkinter as tk
from tkinter import messagebox
from datetime import datetime
import mysql.connector


def connect_db():
    return mysql.connector.connect(
        host='localhost',
        user='root',
        password='root',
        database='weight_calculator'
    )

def calculate():
    try:
        dob = dob_entry.get().strip()
        height = height_entry.get().strip()
        gender = gender_var.get()

        if not dob or not height:
            raise ValueError("Fields cannot be empty.")

        height = float(height)
        if height <= 0:
            raise ValueError("Height must be greater than zero.")

        birth_date = datetime.strptime(dob, "%d-%m-%Y")
        today = datetime.today()
        age = today.year - birth_date.year - ((today.month, today.day) < (birth_date.month, birth_date.day))

        min_weight = 18.5 * (height * 2)
        max_weight = 24.9 * (height * 2)

        result_label.config(text=f"Age: {age} years\nIdeal Weight: {min_weight:.1f} kg - {max_weight:.1f} kg")

        save_to_database(dob, height, gender, age, min_weight, max_weight)

    except ValueError:
        messagebox.showerror("Input Error", "Please enter valid values (e.g., DOB: 15-08-2000, Height: 1.75)")

def save_to_database(dob, height, gender, age, min_weight, max_weight):
    try:
        conn = connect_db()
        cursor = conn.cursor()

        dob_mysql_format = datetime.strptime(dob, "%d-%m-%Y").strftime('%Y-%m-%d')

        query = """
        INSERT INTO user_data (dob, height, gender, age, min_weight, max_weight) 
        VALUES (%s, %s, %s, %s, %s, %s)
        """
        values = (dob_mysql_format, height, gender, age, min_weight, max_weight)
        cursor.execute(query, values)
        conn.commit()

        messagebox.showinfo("Success", "Data saved successfully!")

        cursor.close()
        conn.close()

    except mysql.connector.Error as err:
        messagebox.showerror("Database Error", f"Error: {err}")

root = tk.Tk()
root.title("Age & Weight Finder")
root.configure(bg="pink")
root.geometry("350x300")
root.resizable(False, False)

frame = tk.Frame(root, bg="light blue", padx=20, pady=20)
frame.pack(expand=True)

tk.Label(frame, text="Date of Birth (DD-MM-YYYY):", bg="light blue").grid(row=0, column=0, padx=10, pady=5, sticky="w")
dob_entry = tk.Entry(frame)
dob_entry.grid(row=0, column=1, padx=10, pady=5)

tk.Label(frame, text="Height (in meters):", bg="light blue").grid(row=1, column=0, padx=10, pady=5, sticky="w")
height_entry = tk.Entry(frame)
height_entry.grid(row=1, column=1, padx=10, pady=5)

tk.Label(frame, text="Gender:", bg="light blue").grid(row=2, column=0, padx=10, pady=5, sticky="w")
gender_var = tk.StringVar(value="Male")
tk.Radiobutton(frame, text="Male", variable=gender_var, value="Male", bg="light blue").grid(row=2, column=1, sticky="w")
tk.Radiobutton(frame, text="Female", variable=gender_var, value="Female", bg="light blue").grid(row=2, column=1, sticky="e")

calc_button = tk.Button(frame, text="Calculate & Save", command=calculate, bg="#4CAF50", fg="white", padx=10, font=("Arial", 10, "bold"))
calc_button.grid(row=3, columnspan=2, pady=10)

result_label = tk.Label(frame, text="Enter details and click Calculate", fg="blue", bg="light blue", font=("Arial", 10))
result_label.grid(row=4, columnspan=2, pady=10)

root.mainloop()